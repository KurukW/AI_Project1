Source: https://cs231n.github.io/convolutional-networks/

Résumé des infos importantes:
- Ne pas inventer son architecture:
Prendre une architecture qui existe et qui fonctionne
- Ne pas faire des couches de pooling > 2 qui seraient trop destructives
- Tjrs mettre un padding lors des convolutions pour ne pas modifier la taille des Images
- Favoriser plusieurs petits conv layers plutôt qu'une seule grande
- Utiliser ce qui fonctionne bien sur "ImageNet"
- Dans la liste des modèles existants, GoogLeNet semble être le plus compact et fonctionnel récemment



Tensorflow peut gérer LSTM: https://www.tensorflow.org/guide/keras/rnn
